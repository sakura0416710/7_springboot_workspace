<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="kh.springboot.board.model.mapper.BoardMapper">
  <!-- 게시글 전체 조회 -->
  <select id="getListCount" resultType="_int">
  	select count(*) from board
  	where board_type=#{i} and board_status='Y'
  </select>
  
  
  <select id="selectBoardList" resultType="Board">
  
  select *
  from board
  		join member on(board_writer=id)
  where board_status = 'Y' and board_type=#{i}
  order by board_id desc
  </select>
  
  <!-- 게시글 작성 -->
  <insert id="insertBoard">
  <!-- selectKey적용 전 쿼리 : 
  	insert into board 
  	values(seq_bid.nextval, #{boardTitle},#{boardWriter},
  	#{boardContent},default, sysdate, sysdate, default, #{boardType})
   -->
  <!-- selectKey 적용:insert/update시 사용할 값(시퀀스)를 조회해서 객체의 지정된 필드에 대입
  		1)order		  :sql문이 실행되기 전/후에 selectKey가 수행되도록 지정(쿼리문 실행 전.후에 필드에 값을 적용할지를 결정)
  		2)keyProperty :내가 대입할 필드명 (selectKey조회결과를 저장할 필드)
   -->
   <selectKey order="BEFORE" keyProperty="boardId" resultType="_int">
   		select seq_bid.nextval from dual
   </selectKey>
   insert into board 
  	values(#{boardId}, #{boardTitle},#{boardWriter},
  	#{boardContent},default, sysdate, sysdate, default, #{boardType})
  		
  </insert>
  
  <!-- 게시글 상세조회 -->
  <select id="selectBoard" resultType="Board">
  select * from board 
  join member on(board_writer=id)
  where board_status='Y'and board_id=#{bId}
  </select>
  
  
  <!-- 조회수 증가 -->
  <update id="updateCount" parameterType="_int">
  update board set board_count = board_count + 1
  where board_id = #{bId}
  </update>
  
  
  <!-- 게시글 수정 -->
  <update id="updateBoard">
  	update board set board_title = #{boardTitle}, board_content=#{boardContent},
  	board_modify_date = sysdate, board_type = #{boardType}
  	where board_id = #{boardId}
  </update>
  
  <!-- 게시글 삭제 -->
  <update id="deleteBoard">
  	update board set board_status='N' where board_id = #{bId}
  </update>
  
  
  <!-- 첨부파일 게시글 전체 조회(썸네일 있는 조건으로) + 동적쿼리로 상세보기 쿼리까지 합치기 
  		1. 그냥 첨부파일 게시글 전체조회
  <select id="selectAttmBoardList" resultType="Attachment">
  	select *
  	from attachment
  	where attm_status = 'Y' and attm_level=0
  	order by attm_id
  </select>
  														
  		2. 동적쿼리로 상세보기 쿼리 + 첨부파일 게시글 전체 조회 한꺼번에 짜기	-->
  <select id="selectAttmBoardList" resultType="Attachment">								
  select * from attachment
  where attm_status='Y' and
  	<if test="bId != null">
  		ref_board_id = #{bId}
  	</if>
  	<if test="bId == null">
  		attm_level = 0
  	</if>
  order by attm_id																			
  </select>								
  														
  														
  
  <!-- 첨부파일 게시글 등록(첨부파일 존재하는 ver)list 안의 attachment가 들어가있으니까
  반복문foreach + insertAll으로 꺼내서 DB에 반복 요청을 해야한다. 
  **insertAll에서 seq로 자동 번호 발생을 해도 하나의 insertAll안에 있으면 새로운 숫자가 나타나지 않음..
  그래서 무결성 제약조건에 위배됨-->
  <insert id="insertAttm">
  	insert all
  	<foreach collection="list" item="item" separator=" ">
	  	into attachment 
	  	values (new_aid, #{item.refBoardId}, #{item.originalName},#{item.renameName}, #{item.attmPath}, #{item.attmLevel}, default)
	</foreach>
	select * from dual
  </insert>
  
  
  
  <!-- 첨부파일 게시글 수정 - 삭제  -->
  <delete id="deleteAttm">
  	delete from attachment
  	where rename_name in
  	<foreach collection="list" item="item" open="(" close=")" separator=",">
 		#{item} 	
  	</foreach> 
  </delete>
  
  <!-- 첨부파일 게시글 수정 - 파일 일부 삭제했으므로 썸넬을 위한 이미지 레벨 재설정 -->
  <update id="updateAttmLevel">
  	update attachment set attm_level = 0
  	where attm_id = (select min(attm_id)
  					 from attachment
  					 where ref_board_id = #{boardId})
  </update>
  
  <!-- 첨부파일 게시글 삭제 : board status가 N으로 되면 자동적으로 attm과 reply도 n으로 하는 트리거 쿼리 작성.
		  <update id="statusNAttm">
		  	update attachment
		  	set attm_status = 'N'
		  	where ref_board_id = #{bId}
		  </update>													-->

  <!-- 조회수 기준 가장 많은 게시글 상위 5개 -->
  <select id="selectTop">
  	 <![CDATA[
  	 select * from
		(select * from board
		join member on (id = board_writer)
	    where board_status = 'Y'
	    order by board_count desc)
	where rownum <= 5
	 ]]>
  </select>
  
  <!--게시물 당 댓글 불러오기-->
  <select id="selectReplyList" resultType="Reply">
  	select * 
  	from reply
  		join member on (reply_writer = id)
  	where reply_status = 'Y' and ref_board_id = #{bId}
  	order by reply_id desc
  </select>
  
  <!-- 댓글 등록하기 -->
  <insert id="insertReply">
  	insert into reply
  	values (seq_rid.nextval, #{replyContent}, #{refBoardId}, #{replyWriter}, sysdate, sysdate, default)
  
  </insert>
  
  
  <!-- 댓글 삭제하기 -->
  <delete id="deleteReply">
  	delete from reply
  	where reply_id = #{rId}
  </delete>
  
  <!-- 댓글 수정하기 -->
  <update id="updateReply">
  	update from reply
  	set reply_content = #{replyContent}
  	where reply_id = #{rId}
  </update>
  
  
  
  
  
  
  
  
  
  
  
  
  </mapper>